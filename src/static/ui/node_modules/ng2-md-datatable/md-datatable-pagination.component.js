var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef, } from '@angular/core';
import { BaseComponent } from './helpers';
var MdDataTablePaginationComponent = (function (_super) {
    __extends(MdDataTablePaginationComponent, _super);
    function MdDataTablePaginationComponent(changeDetectorRef) {
        var _this = _super.call(this) || this;
        _this.changeDetectorRef = changeDetectorRef;
        _this.itemsPerPageChoices = [5, 10, 20, 50];
        _this.itemsPerPageFirstChoice = 10;
        _this.needShowFirstArrow = true;
        _this.needShowLastArrow = true;
        _this.ofText = 'of';
        _this.rowsPerPageText = 'Rows per page:';
        _this.paginationChange = new EventEmitter(true);
        return _this;
    }
    Object.defineProperty(MdDataTablePaginationComponent.prototype, "firstIndexOfPage", {
        get: function () {
            return this.currentPage * this.itemsPerPage - this.itemsPerPage + 1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdDataTablePaginationComponent.prototype, "lastIndexOfPage", {
        get: function () {
            var maxLastIndexOnPage = this.currentPage * this.itemsPerPage;
            return maxLastIndexOnPage >= this.itemsCount ? this.itemsCount : maxLastIndexOnPage;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdDataTablePaginationComponent.prototype, "isPreviousOrFirstButtonDisabled", {
        get: function () {
            return this.currentPage === 1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdDataTablePaginationComponent.prototype, "isNextOrLastButtonDisabled", {
        get: function () {
            return this.lastIndexOfPage >= this.itemsCount;
        },
        enumerable: true,
        configurable: true
    });
    MdDataTablePaginationComponent.prototype.ngOnInit = function () {
        if (!this.currentPage) {
            this.currentPage = 1;
        }
        if (!this.itemsPerPage) {
            this.itemsPerPage = this.itemsPerPageFirstChoice;
        }
        if (!this.itemsCount) {
            this.itemsCount = 0;
        }
    };
    MdDataTablePaginationComponent.prototype.onSelectChange = function (event) {
        this.currentPage = 1;
        this.itemsPerPage = Number(event.value);
        this.changeDetectorRef.markForCheck();
        this.emitPaginationChange();
    };
    MdDataTablePaginationComponent.prototype.onClickFirst = function () {
        this.currentPage = 1;
        this.changeDetectorRef.markForCheck();
        this.emitPaginationChange();
    };
    MdDataTablePaginationComponent.prototype.onClickLast = function () {
        this.currentPage = Math.ceil(this.itemsCount / this.itemsPerPage);
        this.changeDetectorRef.markForCheck();
        this.emitPaginationChange();
    };
    MdDataTablePaginationComponent.prototype.onClickPrevious = function () {
        this.currentPage = this.currentPage - 1;
        this.changeDetectorRef.markForCheck();
        this.emitPaginationChange();
    };
    MdDataTablePaginationComponent.prototype.onClickNext = function () {
        this.currentPage = this.currentPage + 1;
        this.changeDetectorRef.markForCheck();
        this.emitPaginationChange();
    };
    MdDataTablePaginationComponent.prototype.emitPaginationChange = function () {
        this.paginationChange.emit({
            page: this.currentPage,
            itemsPerPage: this.itemsPerPage,
        });
    };
    return MdDataTablePaginationComponent;
}(BaseComponent));
__decorate([
    Input(),
    __metadata("design:type", Number)
], MdDataTablePaginationComponent.prototype, "currentPage", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], MdDataTablePaginationComponent.prototype, "itemsPerPage", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], MdDataTablePaginationComponent.prototype, "itemsCount", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], MdDataTablePaginationComponent.prototype, "itemsPerPageChoices", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], MdDataTablePaginationComponent.prototype, "itemsPerPageFirstChoice", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], MdDataTablePaginationComponent.prototype, "needShowFirstArrow", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], MdDataTablePaginationComponent.prototype, "needShowLastArrow", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], MdDataTablePaginationComponent.prototype, "ofText", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], MdDataTablePaginationComponent.prototype, "rowsPerPageText", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], MdDataTablePaginationComponent.prototype, "paginationChange", void 0);
MdDataTablePaginationComponent = __decorate([
    Component({
        selector: 'ng2-md-datatable-pagination',
        template: "\n    <span>{{rowsPerPageText}}</span>\n    <md-select [ngModel]=\"itemsPerPage\" (change)=\"onSelectChange($event)\" class=\"pagination__itemsPerPage\">\n      <md-option *ngFor=\"let choice of itemsPerPageChoices\"\n        [value]=\"choice\">{{ choice }}</md-option>\n    </md-select>\n    <span class=\"pagination__range\">{{firstIndexOfPage}}\u2013{{lastIndexOfPage}} {{ofText}} {{itemsCount}}</span>\n    <div class=\"pagination__controls\">\n      <button *ngIf=\"needShowFirstArrow\" md-icon-button\n        [disabled]=\"isPreviousOrFirstButtonDisabled\"\n        (click)=\"onClickFirst()\"\n        aria-label=\"First\">\n        <md-icon>first_page</md-icon>\n      </button>\n      <button md-icon-button\n        [disabled]=\"isPreviousOrFirstButtonDisabled\"\n        (click)=\"onClickPrevious()\"\n        aria-label=\"Previous\">\n        <md-icon>navigate_before</md-icon>\n      </button>\n      <button md-icon-button\n        [disabled]=\"isNextOrLastButtonDisabled\"\n        (click)=\"onClickNext()\"\n        aria-label=\"Next\">\n        <md-icon>navigate_next</md-icon>\n      </button>\n      <button *ngIf=\"needShowLastArrow\" md-icon-button\n        [disabled]=\"isNextOrLastButtonDisabled\"\n        (click)=\"onClickLast()\"\n        aria-label=\"Last\">\n        <md-icon>last_page</md-icon>\n      </button>\n    </div>\n  ",
        styles: [":host { display: -moz-flex; display: flex; flex-flow: row wrap; -moz-justify-content: flex-end; justify-content: flex-end; -moz-align-items: center; align-items: center; align-self: stretch; color: #5c5c5c; font-weight: 400; font-size: 0.8rem; } .pagination__controls { display: inline-block; padding: 0; } /*# sourceMappingURL=md-datatable-pagination.component.css.map */ "],
        changeDetection: ChangeDetectionStrategy.OnPush,
    }),
    __metadata("design:paramtypes", [ChangeDetectorRef])
], MdDataTablePaginationComponent);
export { MdDataTablePaginationComponent };

//# sourceMappingURL=md-datatable-pagination.component.js.map
