import { AfterContentInit, EventEmitter, QueryList } from '@angular/core';
import 'rxjs/add/observable/from';
import 'rxjs/add/operator/distinctUntilChanged';
import 'rxjs/add/operator/let';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/skip';
import 'rxjs/add/operator/takeUntil';
import { IDatatableSelectionEvent, IDatatableSortEvent } from './md-datatable.interfaces';
import { BaseComponent } from './helpers';
import { MdDataTableHeaderComponent } from './md-datatable-header.component';
import { MdDataTableRowComponent } from './md-datatable-row.component';
import { MdDatatableStore } from './md-datatable.store';
import { MdDatatableActions } from './md-datatable.actions';
export declare class MdDataTableComponent extends BaseComponent implements AfterContentInit {
    private store;
    private actions;
    isSelectable: boolean;
    selectable: any;
    selectionChange: EventEmitter<IDatatableSelectionEvent>;
    sortChange: EventEmitter<IDatatableSortEvent>;
    headerCmp: MdDataTableHeaderComponent;
    rowsCmp: QueryList<MdDataTableRowComponent>;
    id: string;
    constructor(store: MdDatatableStore, actions: MdDatatableActions);
    ngAfterContentInit(): void;
}
