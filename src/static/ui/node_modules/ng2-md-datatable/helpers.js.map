{"version":3,"sources":["../../src/lib/helpers.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,OAAO,EAAE,MAAM,cAAc,CAAC;AAGvC;IAIE;QAFQ,oBAAe,GAAkB,IAAI,OAAO,EAAQ,CAAC;QAG3D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC;IACvC,CAAC;IAED,mCAAW,GAAX;QAEE,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IAClC,CAAC;IACH,oBAAC;AAAD,CAbA,AAaC,IAAA","file":"helpers.js","sourcesContent":["import { OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\n// I don't get why we don't have this unmount$ observable as default in Angular...\nexport abstract class BaseComponent implements OnDestroy {\n  unmount$: Observable<void>;\n  private unmountEmitter$: Subject<void> = new Subject<void>();\n\n  constructor() {\n    this.unmount$ = this.unmountEmitter$;\n  }\n\n  ngOnDestroy() {\n    // we'll use this Observable completion to dispose subscriptions\n    this.unmountEmitter$.next();\n    this.unmountEmitter$.complete();\n  }\n}\n"]}