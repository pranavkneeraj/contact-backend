var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
import { Component, Optional, Inject, forwardRef, } from '@angular/core';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import 'rxjs/add/operator/let';
import 'rxjs/add/operator/takeUntil';
import { BaseComponent } from './helpers';
import { MdDataTableComponent } from './md-datatable.component';
import { MdDatatableStore } from './md-datatable.store';
import { areAllRowsSelected } from './md-datatable.reducer';
import { MdDatatableActions } from './md-datatable.actions';
var MdDataTableHeaderComponent = (function (_super) {
    __extends(MdDataTableHeaderComponent, _super);
    function MdDataTableHeaderComponent(table, store, actions) {
        var _this = _super.call(this) || this;
        _this.table = table;
        _this.store = store;
        _this.actions = actions;
        _this.allChecked$ = new BehaviorSubject(false);
        return _this;
    }
    Object.defineProperty(MdDataTableHeaderComponent.prototype, "selectable", {
        get: function () {
            return this.table && this.table.isSelectable;
        },
        enumerable: true,
        configurable: true
    });
    MdDataTableHeaderComponent.prototype.ngAfterViewInit = function () {
        this.datatableId = this.table.id;
        this.store
            .let(areAllRowsSelected(this.datatableId))
            .takeUntil(this.unmount$)
            .subscribe(this.allChecked$);
    };
    MdDataTableHeaderComponent.prototype.onAllCheckedChange = function (e) {
        this.store.dispatch(this.actions.toggleSelectAll(this.datatableId, e.checked));
    };
    return MdDataTableHeaderComponent;
}(BaseComponent));
MdDataTableHeaderComponent = __decorate([
    Component({
        selector: 'ng2-md-datatable-header',
        template: "\n    <tr>\n      <th *ngIf=\"selectable\" class=\"md-data-check-cell\">\n        <md-checkbox [checked]=\"allChecked$ | async\" (change)=\"onAllCheckedChange($event)\"></md-checkbox>\n      </th>\n      <ng-content></ng-content>\n    </tr>\n  ",
        styles: [":host { display: table-header-group; } tr { vertical-align: middle; } .md-data-check-cell { text-align: center; } /*# sourceMappingURL=md-datatable-header.component.css.map */ "]
    }),
    __param(0, Optional()), __param(0, Inject(forwardRef(function () { return MdDataTableComponent; }))),
    __metadata("design:paramtypes", [MdDataTableComponent,
        MdDatatableStore,
        MdDatatableActions])
], MdDataTableHeaderComponent);
export { MdDataTableHeaderComponent };

//# sourceMappingURL=md-datatable-header.component.js.map
