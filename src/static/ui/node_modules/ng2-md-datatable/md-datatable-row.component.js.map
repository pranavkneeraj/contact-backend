{"version":3,"sources":["../../src/lib/md-datatable-row.component.ts"],"names":[],"mappings":"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","file":"md-datatable-row.component.js","sourcesContent":["import {\n  Component,\n  AfterContentInit,\n  Input,\n  HostBinding,\n  HostListener,\n  ViewChild,\n  Inject,\n  Optional,\n  forwardRef,\n} from '@angular/core';\n\nimport { MdCheckbox, MdCheckboxChange } from '@angular/material';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/let';\nimport 'rxjs/add/operator/takeUntil';\n\nimport { BaseComponent } from './helpers';\nimport { MdDataTableComponent } from './md-datatable.component';\nimport { MdDatatableStore } from './md-datatable.store';\nimport { isRowSelected } from './md-datatable.reducer';\nimport { MdDatatableActions } from './md-datatable.actions';\n\n@Component({\n  selector: 'ng2-md-datatable-row',\n  template: `\n    <td *ngIf=\"selectable\" class=\"md-data-check-cell\">\n      <md-checkbox [checked]=\"checked$ | async\" (change)=\"onCheckboxChange($event)\"></md-checkbox>\n    </td>\n    <ng-content></ng-content>\n  `,\n  styleUrls: ['md-datatable-row.component.scss'],\n})\nexport class MdDataTableRowComponent extends BaseComponent implements AfterContentInit {\n  @Input() selectableValue: string;\n  checked$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  @ViewChild(MdCheckbox) checkboxCmp: MdCheckbox;\n\n  private datatableId: string;\n\n  @HostBinding('class.selectable')\n  get selectable(): boolean {\n    return !!this.selectableValue && this.table && this.table.isSelectable;\n  }\n\n  @HostBinding('class.checked')\n  get isChecked(): boolean {\n    return this.checked$.getValue();\n  }\n\n  @HostListener('click', ['$event'])\n  onRowClick(event: MouseEvent) {\n    // react only on selectable rows\n    if (!this.selectable) {\n      return;\n    }\n\n    // propagate clicks on the whole row (except on links) to MdCheckbox\n    if (this.selectable && this.checkboxCmp && (<any>(event.target))['nodeName'] !== 'A') {\n      event.preventDefault();\n      this.store.dispatch(\n        this.actions.toggleSelectOne(this.datatableId, this.selectableValue, !this.isChecked)\n      );\n    }\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => MdDataTableComponent)) private table: MdDataTableComponent,\n    private store: MdDatatableStore,\n    private actions: MdDatatableActions,\n  ) {\n    super();\n  }\n\n  ngAfterContentInit() {\n    this.datatableId = this.table!.id;\n\n    this.store\n      .let(isRowSelected(this.datatableId, this.selectableValue))\n      .takeUntil(this.unmount$)\n      .subscribe(this.checked$);\n  }\n\n  onCheckboxChange(event: MdCheckboxChange) {\n    this.store.dispatch(\n      this.actions.toggleSelectOne(this.datatableId, this.selectableValue, event.checked)\n    );\n  }\n}\n"]}