var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Injectable } from '@angular/core';
var MdDatatableActions = MdDatatableActions_1 = (function () {
    function MdDatatableActions() {
    }
    MdDatatableActions.prototype.updateSelectableValues = function (datatableId, selectableValues) {
        return {
            datatableId: datatableId,
            type: MdDatatableActions_1.UPDATE_SELECTABLE_VALUES,
            payload: selectableValues,
        };
    };
    MdDatatableActions.prototype.toggleSelectAll = function (datatableId, checked) {
        return {
            datatableId: datatableId,
            type: MdDatatableActions_1.TOGGLE_SELECT_ALL,
            payload: checked,
        };
    };
    MdDatatableActions.prototype.toggleSelectOne = function (datatableId, selectableValue, checked) {
        return {
            datatableId: datatableId,
            type: MdDatatableActions_1.TOGGLE_SELECT_ONE,
            payload: {
                selectableValue: selectableValue,
                checked: checked,
            },
        };
    };
    MdDatatableActions.prototype.toggleSortColumn = function (datatableId, sortBy) {
        return {
            datatableId: datatableId,
            type: MdDatatableActions_1.TOGGLE_SORT_COLUMN,
            payload: sortBy,
        };
    };
    return MdDatatableActions;
}());
MdDatatableActions.UPDATE_SELECTABLE_VALUES = '[Datatable] Update Selectable Values';
MdDatatableActions.TOGGLE_SELECT_ALL = '[Datatable] Toggle Select All';
MdDatatableActions.TOGGLE_SELECT_ONE = '[Datatable] Toggle Select One';
MdDatatableActions.TOGGLE_SORT_COLUMN = '[Datatable] Toggle Sort Column';
MdDatatableActions = MdDatatableActions_1 = __decorate([
    Injectable()
], MdDatatableActions);
export { MdDatatableActions };
var MdDatatableActions_1;

//# sourceMappingURL=md-datatable.actions.js.map
