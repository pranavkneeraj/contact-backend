var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
import { Component, Input, HostBinding, HostListener, Inject, Optional, forwardRef, } from '@angular/core';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import 'rxjs/add/operator/let';
import 'rxjs/add/operator/takeUntil';
import { BaseComponent } from './helpers';
import { MdDataTableComponent } from './md-datatable.component';
import { DatatableSortType } from './md-datatable.interfaces';
import { MdDatatableStore } from './md-datatable.store';
import { getCurrentSort } from './md-datatable.reducer';
import { MdDatatableActions } from './md-datatable.actions';
var MdDataTableColumnComponent = (function (_super) {
    __extends(MdDataTableColumnComponent, _super);
    function MdDataTableColumnComponent(table, store, actions) {
        var _this = _super.call(this) || this;
        _this.table = table;
        _this.store = store;
        _this.actions = actions;
        _this.isNumeric = false;
        _this.sort$ = new BehaviorSubject({ sortType: DatatableSortType.None });
        return _this;
    }
    Object.defineProperty(MdDataTableColumnComponent.prototype, "numeric", {
        set: function (val) {
            this.isNumeric = val !== 'false';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdDataTableColumnComponent.prototype, "sortable", {
        get: function () {
            return !!this.sortableValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdDataTableColumnComponent.prototype, "hasNumericClass", {
        get: function () {
            return this.isNumeric;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdDataTableColumnComponent.prototype, "ascendingSort", {
        get: function () {
            if (!this.sortable) {
                return false;
            }
            var currentSort = this.sort$.getValue();
            return currentSort.sortBy === this.sortableValue &&
                currentSort.sortType === DatatableSortType.Ascending;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdDataTableColumnComponent.prototype, "descendingSort", {
        get: function () {
            if (!this.sortable) {
                return false;
            }
            var currentSort = this.sort$.getValue();
            return currentSort.sortBy === this.sortableValue &&
                currentSort.sortType === DatatableSortType.Descending;
        },
        enumerable: true,
        configurable: true
    });
    MdDataTableColumnComponent.prototype.ngAfterContentInit = function () {
        this.datatableId = this.table.id;
        if (this.datatableId) {
            this.store
                .let(getCurrentSort(this.datatableId))
                .takeUntil(this.unmount$)
                .subscribe(this.sort$);
        }
    };
    MdDataTableColumnComponent.prototype.onClick = function () {
        if (this.datatableId && this.sortable) {
            this.store.dispatch(this.actions.toggleSortColumn(this.datatableId, this.sortableValue));
        }
    };
    return MdDataTableColumnComponent;
}(BaseComponent));
__decorate([
    Input(),
    __metadata("design:type", String)
], MdDataTableColumnComponent.prototype, "sortableValue", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], MdDataTableColumnComponent.prototype, "numeric", null);
__decorate([
    HostBinding('class.sortable'),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [])
], MdDataTableColumnComponent.prototype, "sortable", null);
__decorate([
    HostBinding('class.numeric'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], MdDataTableColumnComponent.prototype, "hasNumericClass", null);
__decorate([
    HostBinding('class.sorted-ascending'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], MdDataTableColumnComponent.prototype, "ascendingSort", null);
__decorate([
    HostBinding('class.sorted-descending'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], MdDataTableColumnComponent.prototype, "descendingSort", null);
__decorate([
    HostListener('click'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], MdDataTableColumnComponent.prototype, "onClick", null);
MdDataTableColumnComponent = __decorate([
    Component({
        selector: 'ng2-md-datatable-column',
        template: '<span><ng-content></ng-content></span>',
        styles: ["@charset \"UTF-8\"; :host { display: table-cell; box-sizing: border-box; vertical-align: middle; text-align: left; text-overflow: ellipsis; -webkit-touch-callout: none; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; } :host.sortable:hover { cursor: pointer; } :host.sortable > span::before { visibility: hidden; position: relative; left: -5px; font-family: 'Material Icons'; vertical-align: sub; content: ''; } :host.sorted-ascending > span::before { visibility: visible; } :host.sorted-descending > span::before { visibility: visible; content: ''; } :host.numeric { text-align: right; } /*# sourceMappingURL=md-datatable-column.component.css.map */ "],
    }),
    __param(0, Optional()), __param(0, Inject(forwardRef(function () { return MdDataTableComponent; }))),
    __metadata("design:paramtypes", [MdDataTableComponent,
        MdDatatableStore,
        MdDatatableActions])
], MdDataTableColumnComponent);
export { MdDataTableColumnComponent };

//# sourceMappingURL=md-datatable-column.component.js.map
