{"version":3,"sources":["../../src/lib/md-datatable-header.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EACL,SAAS,EAET,QAAQ,EACR,MAAM,EACN,UAAU,GACX,MAAM,eAAe,CAAC;AAIvB,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AACvD,OAAO,uBAAuB,CAAC;AAC/B,OAAO,6BAA6B,CAAC;AAErC,OAAO,EAAE,aAAa,EAAE,MAAM,WAAW,CAAC;AAC1C,OAAO,EAAE,oBAAoB,EAAE,MAAM,0BAA0B,CAAC;AAGhE,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AACxD,OAAO,EAAE,kBAAkB,EAAE,MAAM,wBAAwB,CAAC;AAC5D,OAAO,EAAE,kBAAkB,EAAE,MAAM,wBAAwB,CAAC;AAc5D,IAAa,0BAA0B;IAAS,8CAAa;IAS3D,oCACsE,KAA2B,EACvF,KAAuB,EACvB,OAA2B;QAHrC,YAKE,iBAAO,SACR;QALqE,WAAK,GAAL,KAAK,CAAsB;QACvF,WAAK,GAAL,KAAK,CAAkB;QACvB,aAAO,GAAP,OAAO,CAAoB;QAXrC,iBAAW,GAA6B,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC;;IAcnE,CAAC;IAZD,sBAAI,kDAAU;aAAd;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QAC/C,CAAC;;;OAAA;IAYD,oDAAe,GAAf;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAM,CAAC,EAAE,CAAC;QAElC,IAAI,CAAC,KAAK;aACP,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACzC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;aACxB,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,uDAAkB,GAAlB,UAAmB,CAAmB;QACpC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACjF,CAAC;IACH,iCAAC;AAAD,CA7BA,AA6BC,CA7B+C,aAAa,GA6B5D;AA7BY,0BAA0B;IAZtC,SAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,QAAQ,EAAE,sPAOT;QACD,SAAS,EAAE,CAAC,oCAAoC,CAAC;KAClD,CAAC;IAWG,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,UAAU,CAAC,cAAM,OAAA,oBAAoB,EAApB,CAAoB,CAAC,CAAC,CAAA;qCAAgB,oBAAoB;QAChF,gBAAgB;QACd,kBAAkB;GAZ1B,0BAA0B,CA6BtC;SA7BY,0BAA0B","file":"md-datatable-header.component.js","sourcesContent":["import {\n  Component,\n  AfterViewInit,\n  Optional,\n  Inject,\n  forwardRef,\n} from '@angular/core';\n\nimport { MdCheckboxChange } from '@angular/material';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/let';\nimport 'rxjs/add/operator/takeUntil';\n\nimport { BaseComponent } from './helpers';\nimport { MdDataTableComponent } from './md-datatable.component';\nimport { MdDataTableColumnComponent } from './md-datatable-column.component';\n\nimport { MdDatatableStore } from './md-datatable.store';\nimport { areAllRowsSelected } from './md-datatable.reducer';\nimport { MdDatatableActions } from './md-datatable.actions';\n\n@Component({\n  selector: 'ng2-md-datatable-header',\n  template: `\n    <tr>\n      <th *ngIf=\"selectable\" class=\"md-data-check-cell\">\n        <md-checkbox [checked]=\"allChecked$ | async\" (change)=\"onAllCheckedChange($event)\"></md-checkbox>\n      </th>\n      <ng-content></ng-content>\n    </tr>\n  `,\n  styleUrls: ['md-datatable-header.component.scss']\n})\nexport class MdDataTableHeaderComponent extends BaseComponent implements AfterViewInit {\n  allChecked$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  get selectable(): boolean {\n    return this.table && this.table.isSelectable;\n  }\n\n  private datatableId: string;\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => MdDataTableComponent)) private table: MdDataTableComponent,\n    private store: MdDatatableStore,\n    private actions: MdDatatableActions,\n  ) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    this.datatableId = this.table!.id;\n\n    this.store\n      .let(areAllRowsSelected(this.datatableId))\n      .takeUntil(this.unmount$)\n      .subscribe(this.allChecked$);\n  }\n\n  onAllCheckedChange(e: MdCheckboxChange) {\n    this.store.dispatch(this.actions.toggleSelectAll(this.datatableId, e.checked));\n  }\n}\n"]}